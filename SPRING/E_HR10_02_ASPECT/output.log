2021-04-07 09:46:08,206 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:185)     - -------------------------
2021-04-07 09:46:08,209 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:186)     - =@BeforeClass=
2021-04-07 09:46:08,209 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 09:46:08,766 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,767 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): SimpleDriverDataSource
2021-04-07 09:46:08,767 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,780 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,780 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): SimpleDriverDataSource
2021-04-07 09:46:08,780 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,789 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,789 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 09:46:08,790 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 09:46:08,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,803 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,804 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 09:46:08,804 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,804 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,804 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 09:46:08,804 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,858 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,858 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 09:46:08,858 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,860 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,860 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 09:46:08,860 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,876 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,876 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 09:46:08,876 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,878 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,878 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 09:46:08,878 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,895 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,896 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 09:46:08,896 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,897 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,897 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 09:46:08,897 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,898 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,898 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 09:46:08,898 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,898 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,899 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 09:46:08,899 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,910 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,910 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserDaoImpl
2021-04-07 09:46:08,910 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,918 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,918 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy23
2021-04-07 09:46:08,918 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,925 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,925 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserServiceImpl
2021-04-07 09:46:08,925 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: true
2021-04-07 09:46:08,927 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,928 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy24
2021-04-07 09:46:08,928 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,929 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 09:46:08,929 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PerformanceAdvice
2021-04-07 09:46:08,929 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 09:46:08,951 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:56)     - =========================
2021-04-07 09:46:08,951 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:57)     - =@Before=
2021-04-07 09:46:08,951 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 09:46:08,957 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - context: org.springframework.context.support.GenericApplicationContext@65f095f8, started on Wed Apr 07 09:46:08 KST 2021
2021-04-07 09:46:08,962 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 09:46:08,963 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 09:46:08,963 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 09:46:08,963 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:08,963 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 09:46:09,341 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 377(ms)초
2021-04-07 09:46:09,341 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 09:46:09,342 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 09:46:09,342 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 09:46:09,342 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,342 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 09:46:09,391 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 49(ms)초
2021-04-07 09:46:09,391 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 09:46:09,392 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 09:46:09,392 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 09:46:09,392 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,392 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 09:46:09,453 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 60(ms)초
2021-04-07 09:46:09,453 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 09:46:09,453 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 09:46:09,454 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 09:46:09,454 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,454 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 09:46:09,516 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 62(ms)초
2021-04-07 09:46:09,516 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 09:46:09,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 09:46:09,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 09:46:09,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,517 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 09:46:09,574 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 57(ms)초
2021-04-07 09:46:09,574 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 09:46:09,574 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 09:46:09,574 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 09:46:09,574 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,575 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 09:46:09,622 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 48(ms)초
2021-04-07 09:46:09,626 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 09:46:09,626 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 09:46:09,626 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,626 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 09:46:09,724 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 09:46:09,724 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 09:46:09,724 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 09:46:09,728 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 094609, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,728 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 094609, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,728 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 094609, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 09:46:09,730 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:206)     - =========================
2021-04-07 09:46:09,730 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:207)     - =@After=
2021-04-07 09:46:09,730 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 09:46:09,732 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:195)     - -------------------------
2021-04-07 09:46:09,732 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:196)     - =@AfterClass=
2021-04-07 09:46:09,732 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:07:17,131 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:185)     - -------------------------
2021-04-07 10:07:17,133 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:186)     - =@BeforeClass=
2021-04-07 10:07:17,134 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 10:07:17,707 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,707 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): SimpleDriverDataSource
2021-04-07 10:07:17,707 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,720 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,720 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): SimpleDriverDataSource
2021-04-07 10:07:17,720 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,729 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,730 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:07:17,730 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,740 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,740 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:07:17,740 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,744 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,744 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:07:17,745 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,745 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,745 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:07:17,745 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:07:17,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,801 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,802 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:07:17,802 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,816 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,816 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:07:17,817 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,818 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,818 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:07:17,818 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,835 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,835 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:07:17,835 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,837 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,837 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:07:17,837 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,838 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,838 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:07:17,838 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,838 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,839 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:07:17,839 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,849 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,850 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserDaoImpl
2021-04-07 10:07:17,850 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,858 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,858 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy23
2021-04-07 10:07:17,858 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,865 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,865 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserServiceImpl
2021-04-07 10:07:17,865 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: true
2021-04-07 10:07:17,867 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,868 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy24
2021-04-07 10:07:17,868 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,869 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:07:17,869 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PerformanceAdvice
2021-04-07 10:07:17,869 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:07:17,890 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:56)     - =========================
2021-04-07 10:07:17,891 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:57)     - =@Before=
2021-04-07 10:07:17,891 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 10:07:17,899 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - context: org.springframework.context.support.GenericApplicationContext@65f095f8, started on Wed Apr 07 10:07:17 KST 2021
2021-04-07 10:07:17,906 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:07:17,907 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:07:17,907 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:07:17,908 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:17,908 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:07:18,298 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 390(ms)초
2021-04-07 10:07:18,298 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:07:18,298 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:07:18,298 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:07:18,298 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,299 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:07:18,352 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 53(ms)초
2021-04-07 10:07:18,352 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:07:18,352 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:07:18,352 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:07:18,352 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,353 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:07:18,421 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 68(ms)초
2021-04-07 10:07:18,422 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:07:18,423 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:07:18,423 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:07:18,423 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,423 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:07:18,489 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 66(ms)초
2021-04-07 10:07:18,489 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:07:18,489 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:07:18,489 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:07:18,489 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,489 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:07:18,546 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 56(ms)초
2021-04-07 10:07:18,546 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:07:18,546 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:07:18,546 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:07:18,546 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,546 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:07:18,609 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 62(ms)초
2021-04-07 10:07:18,612 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:07:18,612 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:07:18,612 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,612 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:07:18,709 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:07:18,710 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:07:18,710 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:07:18,718 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 100718, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,718 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 100718, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,718 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 100718, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:07:18,720 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:206)     - =========================
2021-04-07 10:07:18,720 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:207)     - =@After=
2021-04-07 10:07:18,720 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 10:07:18,722 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:195)     - -------------------------
2021-04-07 10:07:18,722 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:196)     - =@AfterClass=
2021-04-07 10:07:18,722 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:09:23,715 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:185)     - -------------------------
2021-04-07 10:09:23,718 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:186)     - =@BeforeClass=
2021-04-07 10:09:23,718 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 10:09:24,281 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,281 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): SimpleDriverDataSource
2021-04-07 10:09:24,281 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,294 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,294 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): SimpleDriverDataSource
2021-04-07 10:09:24,294 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,303 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,303 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:09:24,303 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,314 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,314 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:09:24,314 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,318 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,319 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:09:24,319 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,320 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,320 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:09:24,320 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,377 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,378 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:09:24,378 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,379 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,379 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:09:24,379 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,394 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,395 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:09:24,395 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,396 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,396 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:09:24,397 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,413 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,413 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:09:24,413 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,414 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,415 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:09:24,415 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,415 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,415 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:09:24,415 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,416 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,416 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:09:24,416 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,426 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,427 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserDaoImpl
2021-04-07 10:09:24,427 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,435 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,436 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy23
2021-04-07 10:09:24,436 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,444 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,444 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserServiceImpl
2021-04-07 10:09:24,444 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: true
2021-04-07 10:09:24,447 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,447 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy24
2021-04-07 10:09:24,447 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,449 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:09:24,449 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PerformanceAdvice
2021-04-07 10:09:24,449 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:09:24,474 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:56)     - =========================
2021-04-07 10:09:24,474 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:57)     - =@Before=
2021-04-07 10:09:24,474 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 10:09:24,475 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - context: org.springframework.context.support.GenericApplicationContext@3246fb96, started on Wed Apr 07 10:09:23 KST 2021
2021-04-07 10:09:24,480 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:09:24,481 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:09:24,481 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:09:24,481 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:24,481 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:09:24,852 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 370(ms)초
2021-04-07 10:09:24,852 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:09:24,852 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:09:24,852 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:09:24,852 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:24,853 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:09:24,921 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 68(ms)초
2021-04-07 10:09:24,921 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:09:24,921 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:09:24,921 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:09:24,921 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:24,921 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:09:24,979 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 57(ms)초
2021-04-07 10:09:24,979 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:09:24,979 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:09:24,979 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:09:24,980 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:24,980 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:09:25,029 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 49(ms)초
2021-04-07 10:09:25,030 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:09:25,030 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:09:25,030 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:09:25,030 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:25,030 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:09:25,088 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 57(ms)초
2021-04-07 10:09:25,088 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:09:25,088 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:09:25,088 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:09:25,089 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:25,089 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:09:25,146 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 57(ms)초
2021-04-07 10:09:25,149 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:09:25,149 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:09:25,149 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:25,149 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:09:25,260 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:09:25,260 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:09:25,261 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:09:25,264 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 100925, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:25,264 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 100925, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:25,264 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 100925, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:09:25,266 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:206)     - =========================
2021-04-07 10:09:25,266 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:207)     - =@After=
2021-04-07 10:09:25,266 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 10:09:25,268 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:195)     - -------------------------
2021-04-07 10:09:25,268 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:196)     - =@AfterClass=
2021-04-07 10:09:25,268 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:15:39,896 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:185)     - -------------------------
2021-04-07 10:15:39,899 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:186)     - =@BeforeClass=
2021-04-07 10:15:39,899 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 10:15:40,465 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,465 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): BasicDataSource
2021-04-07 10:15:40,466 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,480 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,480 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): BasicDataSource
2021-04-07 10:15:40,480 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,489 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,489 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:15:40,489 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,498 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,498 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:15:40,499 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,502 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,503 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:15:40,503 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,503 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,503 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:15:40,503 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,559 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,559 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:15:40,559 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,560 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,560 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:15:40,560 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,575 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,575 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:15:40,575 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,577 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,577 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:15:40,577 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,594 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,594 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:15:40,594 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,596 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,596 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:15:40,596 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,596 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,596 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:15:40,597 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,597 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,597 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:15:40,597 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,607 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,607 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserDaoImpl
2021-04-07 10:15:40,608 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,615 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,616 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy23
2021-04-07 10:15:40,616 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,622 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,622 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserServiceImpl
2021-04-07 10:15:40,622 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: true
2021-04-07 10:15:40,624 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,624 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy24
2021-04-07 10:15:40,624 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,628 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:15:40,629 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PerformanceAdvice
2021-04-07 10:15:40,629 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:15:40,652 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:56)     - =========================
2021-04-07 10:15:40,652 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:57)     - =@Before=
2021-04-07 10:15:40,652 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 10:15:40,652 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - context: org.springframework.context.support.GenericApplicationContext@65f095f8, started on Wed Apr 07 10:15:40 KST 2021
2021-04-07 10:15:40,657 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:15:40,658 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:15:40,658 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:15:40,658 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:40,658 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:15:41,089 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 430(ms)초
2021-04-07 10:15:41,089 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:15:41,089 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:15:41,090 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:15:41,090 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,090 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:15:41,094 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 4(ms)초
2021-04-07 10:15:41,094 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:15:41,095 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:15:41,095 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:15:41,095 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,095 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:15:41,105 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 10(ms)초
2021-04-07 10:15:41,106 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:15:41,106 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:15:41,106 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:15:41,107 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,107 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:15:41,113 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 6(ms)초
2021-04-07 10:15:41,113 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:15:41,113 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:15:41,114 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:15:41,114 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,114 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:15:41,117 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 10:15:41,117 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:15:41,117 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:15:41,118 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:15:41,118 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,118 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:15:41,123 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 5(ms)초
2021-04-07 10:15:41,126 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:15:41,127 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:15:41,127 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,127 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:15:41,183 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:15:41,183 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:15:41,184 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:15:41,184 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 101541, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,184 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 101541, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,184 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 101541, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:15:41,186 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:206)     - =========================
2021-04-07 10:15:41,186 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:207)     - =@After=
2021-04-07 10:15:41,186 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 10:15:41,187 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:195)     - -------------------------
2021-04-07 10:15:41,188 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:196)     - =@AfterClass=
2021-04-07 10:15:41,188 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:26:05,023 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:185)     - -------------------------
2021-04-07 10:26:05,026 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:186)     - =@BeforeClass=
2021-04-07 10:26:05,026 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 10:26:05,624 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,624 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): BasicDataSource
2021-04-07 10:26:05,625 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,641 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,641 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): BasicDataSource
2021-04-07 10:26:05,641 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,650 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,650 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:26:05,651 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,660 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,660 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:26:05,660 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,664 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,664 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:26:05,665 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,665 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,665 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:26:05,665 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,720 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,720 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:26:05,720 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,721 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,721 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:26:05,721 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,737 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,737 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:26:05,738 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,739 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,740 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:26:05,740 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,756 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,756 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:26:05,757 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,758 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,758 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:26:05,758 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,758 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,758 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:26:05,759 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,759 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,759 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:26:05,759 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,769 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,769 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserDaoImpl
2021-04-07 10:26:05,769 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,777 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,777 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy23
2021-04-07 10:26:05,778 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,784 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,784 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserServiceImpl
2021-04-07 10:26:05,784 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: true
2021-04-07 10:26:05,786 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,786 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy24
2021-04-07 10:26:05,786 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,788 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:26:05,788 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PerformanceAdvice
2021-04-07 10:26:05,788 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:26:05,813 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:56)     - =========================
2021-04-07 10:26:05,813 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:57)     - =@Before=
2021-04-07 10:26:05,813 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 10:26:05,819 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - context: org.springframework.context.support.GenericApplicationContext@65f095f8, started on Wed Apr 07 10:26:05 KST 2021
2021-04-07 10:26:05,825 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:26:05,826 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:26:05,826 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:26:05,826 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:05,826 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:26:06,275 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 449(ms)초
2021-04-07 10:26:06,276 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:26:06,276 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:26:06,276 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:26:06,276 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,276 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:26:06,282 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 5(ms)초
2021-04-07 10:26:06,282 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:26:06,283 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:26:06,283 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:26:06,283 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,284 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:26:06,287 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 4(ms)초
2021-04-07 10:26:06,287 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:26:06,288 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:26:06,288 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:26:06,288 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,288 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:26:06,292 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 10:26:06,293 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:26:06,293 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:26:06,293 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:26:06,294 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,294 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:26:06,298 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 5(ms)초
2021-04-07 10:26:06,299 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:26:06,299 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:26:06,299 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:26:06,299 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,299 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:26:06,303 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 10:26:06,306 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:26:06,306 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:26:06,306 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,306 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:26:06,366 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:26:06,366 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:26:06,366 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:26:06,367 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 102606, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,367 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 102606, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,367 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 102606, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:26:06,370 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:206)     - =========================
2021-04-07 10:26:06,370 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:207)     - =@After=
2021-04-07 10:26:06,370 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 10:26:06,372 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:195)     - -------------------------
2021-04-07 10:26:06,372 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:196)     - =@AfterClass=
2021-04-07 10:26:06,372 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:27:32,065 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:185)     - -------------------------
2021-04-07 10:27:32,068 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:186)     - =@BeforeClass=
2021-04-07 10:27:32,068 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 10:27:32,669 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,669 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): BasicDataSource
2021-04-07 10:27:32,669 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,684 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,684 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): BasicDataSource
2021-04-07 10:27:32,684 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,693 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,693 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:27:32,693 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,702 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,702 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DataSourceTransactionManager
2021-04-07 10:27:32,702 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,706 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,707 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:27:32,707 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,707 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,708 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PasswordAuthentication
2021-04-07 10:27:32,708 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,761 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,761 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:27:32,762 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,763 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,763 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Authenticator$$EnhancerBySpringCGLIB$$17b44ede
2021-04-07 10:27:32,763 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,778 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,778 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:27:32,778 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,780 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,780 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): Session
2021-04-07 10:27:32,780 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,797 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,797 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:27:32,797 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,798 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): JavaMailSenderImpl
2021-04-07 10:27:32,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:27:32,799 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): DummyMailSender
2021-04-07 10:27:32,800 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,810 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,810 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserDaoImpl
2021-04-07 10:27:32,811 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,819 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,819 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy23
2021-04-07 10:27:32,819 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,825 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,825 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): UserServiceImpl
2021-04-07 10:27:32,825 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: true
2021-04-07 10:27:32,831 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,831 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): $Proxy24
2021-04-07 10:27:32,832 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,833 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:35)     - mappedName: *ServiceImpl
2021-04-07 10:27:32,833 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:36)     - clazz.getSimpleName(): PerformanceAdvice
2021-04-07 10:27:32,833 DEBUG [main] service.NameMatchClassMethodPointCut (NameMatchClassMethodPointCut.java:37)     - flag: false
2021-04-07 10:27:32,857 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:56)     - =========================
2021-04-07 10:27:32,858 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:57)     - =@Before=
2021-04-07 10:27:32,858 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 10:27:32,858 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - context: org.springframework.context.support.GenericApplicationContext@65f095f8, started on Wed Apr 07 10:27:32 KST 2021
2021-04-07 10:27:32,863 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:27:32,864 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:27:32,864 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:27:32,865 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:32,865 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:27:33,302 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 437(ms)초
2021-04-07 10:27:33,303 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:27:33,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:27:33,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:27:33,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:27:33,306 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 10:27:33,306 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:27:33,306 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:27:33,306 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:27:33,307 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,307 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:27:33,310 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 10:27:33,311 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:27:33,311 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:27:33,312 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:27:33,312 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,312 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:27:33,319 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 8(ms)초
2021-04-07 10:27:33,320 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:27:33,320 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:27:33,320 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:27:33,321 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,321 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:27:33,324 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 10:27:33,324 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:27:33,324 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:27:33,324 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:27:33,324 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,325 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:27:33,341 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 16(ms)초
2021-04-07 10:27:33,344 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:27:33,345 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:27:33,345 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,345 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:27:33,398 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:27:33,398 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:27:33,399 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:27:33,399 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 102733, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,399 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 102733, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,399 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 102733, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:27:33,401 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:206)     - =========================
2021-04-07 10:27:33,401 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:207)     - =@After=
2021-04-07 10:27:33,401 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 10:27:33,402 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:195)     - -------------------------
2021-04-07 10:27:33,403 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:196)     - =@AfterClass=
2021-04-07 10:27:33,403 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:47:43,557 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:187)     - -------------------------
2021-04-07 10:47:43,560 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:188)     - =@BeforeClass=
2021-04-07 10:47:43,560 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:189)     - -------------------------
2021-04-07 10:47:44,342 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:58)     - =========================
2021-04-07 10:47:44,342 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:59)     - =@Before=
2021-04-07 10:47:44,342 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:60)     - =========================
2021-04-07 10:47:44,349 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:62)     - context: org.springframework.context.support.GenericApplicationContext@65f095f8, started on Wed Apr 07 10:47:43 KST 2021
2021-04-07 10:47:44,355 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:47:44,356 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:47:44,356 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:47:44,356 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,356 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:47:44,880 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 523(ms)초
2021-04-07 10:47:44,880 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:47:44,880 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:47:44,880 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:47:44,881 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,881 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:47:44,893 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 13(ms)초
2021-04-07 10:47:44,894 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:47:44,894 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:47:44,894 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:47:44,894 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,894 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:47:44,899 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 5(ms)초
2021-04-07 10:47:44,900 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:47:44,900 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:47:44,900 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:47:44,901 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,901 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:47:44,906 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 5(ms)초
2021-04-07 10:47:44,906 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:47:44,906 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:47:44,906 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:47:44,907 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,907 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:47:44,916 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 9(ms)초
2021-04-07 10:47:44,917 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:47:44,917 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:47:44,917 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:47:44,917 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,917 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:47:44,929 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 12(ms)초
2021-04-07 10:47:44,932 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:47:44,932 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:47:44,932 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,932 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:47:44,991 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:47:44,991 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:47:44,992 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:47:44,992 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱, passwd=1234, level=BASIC, login=1, recommend=0, email=plagis@daum.net, regDt=2021/04/07 104744, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,992 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱, passwd=1234, level=SILVER, login=51, recommend=0, email=plagis@daum.net, regDt=2021/04/07 104744, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,992 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱, passwd=1234, level=GOLD, login=70, recommend=31, email=plagis@daum.net, regDt=2021/04/07 104745, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:47:44,994 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:208)     - =========================
2021-04-07 10:47:44,994 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:209)     - =@After=
2021-04-07 10:47:44,994 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:210)     - =========================
2021-04-07 10:47:44,996 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:197)     - -------------------------
2021-04-07 10:47:44,996 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:198)     - =@AfterClass=
2021-04-07 10:47:44,996 DEBUG [main] ehr.JTestLifeCycle (JTestLifeCycle.java:199)     - -------------------------
2021-04-07 10:49:34,283 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 10:49:34,290 DEBUG [main] ehr.JTestUserService (JTestUserService.java:159)     - context: org.springframework.context.support.GenericApplicationContext@2e222612, started on Wed Apr 07 10:49:33 KST 2021
2021-04-07 10:49:34,292 DEBUG [main] ehr.JTestUserService (JTestUserService.java:160)     - userService: com.sist.ehr.member.service.UserServiceImpl@790132f7
2021-04-07 10:49:34,293 DEBUG [main] ehr.JTestUserService (JTestUserService.java:161)     - userDao: com.sist.ehr.UserDaoImpl@2228db21
2021-04-07 10:49:34,293 DEBUG [main] ehr.JTestUserService (JTestUserService.java:162)     - dataSource: org.apache.commons.dbcp.BasicDataSource@48b0e701
2021-04-07 10:49:34,293 DEBUG [main] ehr.JTestUserService (JTestUserService.java:163)     - transactionManagerorg.springframework.jdbc.datasource.DataSourceTransactionManager@241a0c3a
2021-04-07 10:49:34,297 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 10:49:34,299 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 10:49:34,302 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:49:34,302 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:49:34,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:49:34,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,303 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:49:34,757 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 453(ms)초
2021-04-07 10:49:34,757 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:49:34,757 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:49:34,758 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:49:34,758 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,758 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:49:34,761 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 10:49:34,761 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:49:34,761 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:49:34,761 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:49:34,761 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,761 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:49:34,764 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 10:49:34,764 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:49:34,764 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:49:34,764 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:49:34,764 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,764 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:49:34,772 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 8(ms)초
2021-04-07 10:49:34,773 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 10:49:34,773 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 10:49:34,773 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 10:49:34,773 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,774 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 10:49:34,775 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 10:49:34,776 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:49:34,776 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:49:34,776 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:49:34,776 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,776 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:49:34,781 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 10:49:34,781 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:49:34,781 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:49:34,782 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:49:34,782 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,782 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:49:34,788 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 6(ms)초
2021-04-07 10:49:34,788 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:49:34,788 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:49:34,789 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:49:34,789 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,789 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:49:34,792 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 10:49:34,792 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:49:34,792 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:49:34,793 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:49:34,793 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,793 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:49:34,796 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 10:49:34,796 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 10:49:34,796 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 10:49:34,796 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 10:49:34,797 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,797 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 10:49:34,799 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 10:49:34,803 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 10:49:34,804 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 10:49:34,804 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,804 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 10:49:34,868 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:49:34,868 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 10:49:34,868 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 10:49:34,869 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 3
2021-04-07 10:49:34,869 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 4
2021-04-07 10:49:34,869 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=2021/04/07 104934, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,870 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 104934, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,870 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=2021/04/07 104934, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,870 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=2021/04/07 104934, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,870 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=2021/04/07 104934, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,871 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 10:49:34,871 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 10:49:34,871 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@62db0521
2021-04-07 10:49:34,875 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 3(ms)초
2021-04-07 10:49:34,875 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 10:49:34,875 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 10:49:34,875 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 10:49:34,875 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 10:49:34,875 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 10:49:34,875 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 10:49:34,876 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@6ef1a1b9
2021-04-07 10:49:34,880 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 4(ms)초
2021-04-07 10:49:34,880 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 10:49:34,880 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 10:49:34,881 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 10:49:34,881 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 10:49:34,885 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doSelectOne
2021-04-07 10:49:34,885 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:221)     - ==================================
2021-04-07 10:49:34,885 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:222)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM                  
     hr_member         
 WHERE u_id = ?        

2021-04-07 10:49:34,886 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:223)     - ==================================
2021-04-07 10:49:34,886 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:226)     - =args=[Ljava.lang.Object;@3baf6936
2021-04-07 10:49:34,889 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 10:49:34,891 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:230)     - ==================================
2021-04-07 10:49:34,891 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:231)     - =outVO=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=SILVER, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 104934, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 10:49:34,891 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:232)     - ==================================
2021-04-07 10:49:34,891 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doSelectOne의 수행시간: 6(ms)초
2021-04-07 10:49:34,892 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:05:47,677 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:05:47,685 DEBUG [main] ehr.JTestUserService (JTestUserService.java:159)     - context: org.springframework.context.support.GenericApplicationContext@2e222612, started on Wed Apr 07 11:05:47 KST 2021
2021-04-07 11:05:47,688 DEBUG [main] ehr.JTestUserService (JTestUserService.java:160)     - userService: com.sist.ehr.member.service.UserServiceImpl@790132f7
2021-04-07 11:05:47,688 DEBUG [main] ehr.JTestUserService (JTestUserService.java:161)     - userDao: com.sist.ehr.UserDaoImpl@2228db21
2021-04-07 11:05:47,688 DEBUG [main] ehr.JTestUserService (JTestUserService.java:162)     - dataSource: org.apache.commons.dbcp.BasicDataSource@48b0e701
2021-04-07 11:05:47,688 DEBUG [main] ehr.JTestUserService (JTestUserService.java:163)     - transactionManagerorg.springframework.jdbc.datasource.DataSourceTransactionManager@241a0c3a
2021-04-07 11:05:47,692 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:05:47,694 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:05:47,697 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:05:47,698 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:05:47,698 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:05:47,698 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:47,698 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:05:48,133 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 435(ms)초
2021-04-07 11:05:48,134 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:05:48,134 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:05:48,134 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:05:48,135 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,135 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:05:48,137 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:05:48,137 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:05:48,137 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:05:48,137 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:05:48,137 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,137 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:05:48,141 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:05:48,141 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:05:48,142 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:05:48,142 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:05:48,142 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,142 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:05:48,153 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 10(ms)초
2021-04-07 11:05:48,153 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:05:48,154 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:05:48,154 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:05:48,154 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,154 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:05:48,157 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:05:48,157 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:05:48,158 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:05:48,158 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:05:48,158 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,159 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:05:48,170 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 11(ms)초
2021-04-07 11:05:48,170 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:05:48,170 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:05:48,170 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:05:48,171 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,171 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:05:48,176 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 5(ms)초
2021-04-07 11:05:48,176 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:05:48,177 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:05:48,177 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:05:48,177 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,177 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:05:48,180 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:05:48,180 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:05:48,181 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:05:48,181 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:05:48,181 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,181 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:05:48,185 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 11:05:48,186 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:05:48,186 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:05:48,186 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:05:48,186 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,186 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:05:48,191 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 5(ms)초
2021-04-07 11:05:48,197 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 11:05:48,198 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 11:05:48,198 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,198 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 11:05:48,269 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:05:48,269 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 11:05:48,269 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 11:05:48,269 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 3
2021-04-07 11:05:48,269 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 4
2021-04-07 11:05:48,270 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=2021/04/07 110548, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,270 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110548, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,270 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=2021/04/07 110548, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,270 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=2021/04/07 110548, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,270 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=2021/04/07 110548, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,270 DEBUG [main] service.UserServiceImpl (UserServiceImpl.java:92)     - Impl-upgradeLevel
2021-04-07 11:05:48,271 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 11:05:48,271 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 11:05:48,271 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@7e00ed0f
2021-04-07 11:05:48,273 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 2(ms)초
2021-04-07 11:05:48,274 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 11:05:48,274 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 11:05:48,274 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 11:05:48,274 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 11:05:48,274 DEBUG [main] service.UserServiceImpl (UserServiceImpl.java:92)     - Impl-upgradeLevel
2021-04-07 11:05:48,274 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:13)     - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2021-04-07 11:05:48,274 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:14)     - >TestUserServiceException>트랜잭션 테스트: H_126_04
2021-04-07 11:05:48,274 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:15)     - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2021-04-07 11:05:48,277 DEBUG [main] ehr.JTestUserService (JTestUserService.java:205)     - ================================
2021-04-07 11:05:48,277 DEBUG [main] ehr.JTestUserService (JTestUserService.java:206)     - =RuntimeException=트랜잭션 테스트: H_126_04
2021-04-07 11:05:48,277 DEBUG [main] ehr.JTestUserService (JTestUserService.java:207)     - ================================
2021-04-07 11:05:48,278 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doSelectOne
2021-04-07 11:05:48,278 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:221)     - ==================================
2021-04-07 11:05:48,278 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:222)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM                  
     hr_member         
 WHERE u_id = ?        

2021-04-07 11:05:48,278 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:223)     - ==================================
2021-04-07 11:05:48,278 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:226)     - =args=[Ljava.lang.Object;@5fbdc49b
2021-04-07 11:05:48,281 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:05:48,282 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:230)     - ==================================
2021-04-07 11:05:48,283 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:231)     - =outVO=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110548, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:05:48,283 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:232)     - ==================================
2021-04-07 11:05:48,283 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doSelectOne의 수행시간: 5(ms)초
2021-04-07 11:05:48,283 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:07:46,508 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:07:46,511 DEBUG [main] ehr.JTestUserService (JTestUserService.java:159)     - context: org.springframework.context.support.GenericApplicationContext@1356d4d4, started on Wed Apr 07 11:07:45 KST 2021
2021-04-07 11:07:46,514 DEBUG [main] ehr.JTestUserService (JTestUserService.java:160)     - userService: com.sist.ehr.member.service.UserServiceImpl@df1cff6
2021-04-07 11:07:46,514 DEBUG [main] ehr.JTestUserService (JTestUserService.java:161)     - userDao: com.sist.ehr.UserDaoImpl@4925f4f5
2021-04-07 11:07:46,514 DEBUG [main] ehr.JTestUserService (JTestUserService.java:162)     - dataSource: org.apache.commons.dbcp.BasicDataSource@1ad926d3
2021-04-07 11:07:46,514 DEBUG [main] ehr.JTestUserService (JTestUserService.java:163)     - transactionManagerorg.springframework.jdbc.datasource.DataSourceTransactionManager@3a43d133
2021-04-07 11:07:46,518 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:07:46,521 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:07:46,524 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:07:46,525 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:07:46,525 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:07:46,525 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,525 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:07:46,973 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 448(ms)초
2021-04-07 11:07:46,973 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:07:46,973 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:07:46,974 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:07:46,974 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,975 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:07:46,977 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:07:46,977 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:07:46,977 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:07:46,977 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:07:46,978 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,978 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:07:46,981 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:07:46,981 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:07:46,981 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:07:46,982 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:07:46,982 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,982 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:07:46,985 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:07:46,985 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:07:46,985 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:07:46,985 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:07:46,985 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,985 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:07:46,988 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 11:07:46,988 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:07:46,988 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:07:46,988 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:07:46,988 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,989 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:07:46,993 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 11:07:46,993 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:07:46,994 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:07:46,994 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:07:46,994 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,994 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:07:46,998 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 11:07:46,999 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:07:46,999 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:07:46,999 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:07:46,999 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:46,999 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:07:47,003 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:07:47,003 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:07:47,003 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:07:47,003 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:07:47,004 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,004 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:07:47,034 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 30(ms)초
2021-04-07 11:07:47,034 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:07:47,035 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:07:47,035 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:07:47,035 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,035 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:07:47,038 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:07:47,040 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 11:07:47,040 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 11:07:47,040 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,040 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 11:07:47,096 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:07:47,096 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 11:07:47,096 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 11:07:47,097 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 3
2021-04-07 11:07:47,097 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 4
2021-04-07 11:07:47,097 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=2021/04/07 110747, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,097 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110747, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,097 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=2021/04/07 110747, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,098 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=2021/04/07 110747, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,098 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=2021/04/07 110747, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,098 DEBUG [main] service.UserServiceImpl (UserServiceImpl.java:92)     - Impl-upgradeLevel
2021-04-07 11:07:47,098 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 11:07:47,098 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 11:07:47,099 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@12ffd1de
2021-04-07 11:07:47,101 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 2(ms)초
2021-04-07 11:07:47,102 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 11:07:47,102 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 11:07:47,102 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 11:07:47,102 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 11:07:47,102 DEBUG [main] service.UserServiceImpl (UserServiceImpl.java:92)     - Impl-upgradeLevel
2021-04-07 11:07:47,102 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:13)     - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2021-04-07 11:07:47,102 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:14)     - >TestUserServiceException>트랜잭션 테스트: H_126_04
2021-04-07 11:07:47,102 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:15)     - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2021-04-07 11:07:47,105 DEBUG [main] ehr.JTestUserService (JTestUserService.java:205)     - ================================
2021-04-07 11:07:47,105 DEBUG [main] ehr.JTestUserService (JTestUserService.java:206)     - =RuntimeException=트랜잭션 테스트: H_126_04
2021-04-07 11:07:47,105 DEBUG [main] ehr.JTestUserService (JTestUserService.java:207)     - ================================
2021-04-07 11:07:47,105 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doSelectOne
2021-04-07 11:07:47,105 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:221)     - ==================================
2021-04-07 11:07:47,105 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:222)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM                  
     hr_member         
 WHERE u_id = ?        

2021-04-07 11:07:47,105 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:223)     - ==================================
2021-04-07 11:07:47,106 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:226)     - =args=[Ljava.lang.Object;@9d3c67
2021-04-07 11:07:47,109 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:07:47,111 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:230)     - ==================================
2021-04-07 11:07:47,111 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:231)     - =outVO=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=SILVER, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110747, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:07:47,111 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:232)     - ==================================
2021-04-07 11:07:47,111 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doSelectOne의 수행시간: 6(ms)초
2021-04-07 11:07:47,112 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:08:46,025 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:08:46,028 DEBUG [main] ehr.JTestUserService (JTestUserService.java:159)     - context: org.springframework.context.support.GenericApplicationContext@2e222612, started on Wed Apr 07 11:08:45 KST 2021
2021-04-07 11:08:46,030 DEBUG [main] ehr.JTestUserService (JTestUserService.java:160)     - userService: com.sist.ehr.member.service.UserServiceImpl@5652f555
2021-04-07 11:08:46,031 DEBUG [main] ehr.JTestUserService (JTestUserService.java:161)     - userDao: com.sist.ehr.UserDaoImpl@4fe01805
2021-04-07 11:08:46,031 DEBUG [main] ehr.JTestUserService (JTestUserService.java:162)     - dataSource: org.apache.commons.dbcp.BasicDataSource@55120f99
2021-04-07 11:08:46,031 DEBUG [main] ehr.JTestUserService (JTestUserService.java:163)     - transactionManagerorg.springframework.jdbc.datasource.DataSourceTransactionManager@794b435f
2021-04-07 11:08:46,035 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:08:46,037 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:08:46,040 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:08:46,041 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:08:46,041 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:08:46,041 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,042 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:08:46,489 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 447(ms)초
2021-04-07 11:08:46,489 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:08:46,489 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:08:46,490 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:08:46,491 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,491 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:08:46,494 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 4(ms)초
2021-04-07 11:08:46,494 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:08:46,494 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:08:46,495 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:08:46,495 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,495 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:08:46,498 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:08:46,498 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:08:46,498 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:08:46,499 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:08:46,499 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,499 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:08:46,503 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 4(ms)초
2021-04-07 11:08:46,503 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:08:46,503 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:08:46,503 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:08:46,503 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,503 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:08:46,505 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 11:08:46,506 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:08:46,506 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:08:46,506 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:08:46,507 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,507 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:08:46,512 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 11:08:46,512 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:08:46,512 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:08:46,512 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:08:46,512 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,512 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:08:46,516 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:08:46,516 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:08:46,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:08:46,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:08:46,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,516 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:08:46,522 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 6(ms)초
2021-04-07 11:08:46,522 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:08:46,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:08:46,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:08:46,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,524 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:08:46,527 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 11:08:46,527 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:08:46,527 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:08:46,528 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:08:46,528 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,528 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:08:46,531 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:08:46,537 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 11:08:46,537 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 11:08:46,538 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,538 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 11:08:46,593 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:08:46,593 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 11:08:46,593 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 11:08:46,593 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 3
2021-04-07 11:08:46,594 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 4
2021-04-07 11:08:46,594 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=2021/04/07 110846, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,594 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110846, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,594 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=2021/04/07 110846, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,594 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=2021/04/07 110846, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,594 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=2021/04/07 110846, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,594 DEBUG [main] service.UserServiceImpl (UserServiceImpl.java:92)     - Impl-upgradeLevel
2021-04-07 11:08:46,595 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 11:08:46,595 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 11:08:46,595 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@6d7cada5
2021-04-07 11:08:46,597 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 2(ms)초
2021-04-07 11:08:46,598 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 11:08:46,598 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 11:08:46,598 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 11:08:46,598 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 11:08:46,598 DEBUG [main] service.UserServiceImpl (UserServiceImpl.java:92)     - Impl-upgradeLevel
2021-04-07 11:08:46,598 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:13)     - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2021-04-07 11:08:46,598 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:14)     - >TestUserServiceException>트랜잭션 테스트: H_126_04
2021-04-07 11:08:46,599 DEBUG [main] service.TestUserServiceException (TestUserServiceException.java:15)     - >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
2021-04-07 11:08:46,601 DEBUG [main] ehr.JTestUserService (JTestUserService.java:205)     - ================================
2021-04-07 11:08:46,602 DEBUG [main] ehr.JTestUserService (JTestUserService.java:206)     - =RuntimeException=트랜잭션 테스트: H_126_04
2021-04-07 11:08:46,602 DEBUG [main] ehr.JTestUserService (JTestUserService.java:207)     - ================================
2021-04-07 11:08:46,602 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doSelectOne
2021-04-07 11:08:46,602 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:221)     - ==================================
2021-04-07 11:08:46,603 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:222)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM                  
     hr_member         
 WHERE u_id = ?        

2021-04-07 11:08:46,603 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:223)     - ==================================
2021-04-07 11:08:46,603 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:226)     - =args=[Ljava.lang.Object;@1b4ae4e0
2021-04-07 11:08:46,606 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:08:46,608 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:230)     - ==================================
2021-04-07 11:08:46,608 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:231)     - =outVO=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110846, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:08:46,608 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:232)     - ==================================
2021-04-07 11:08:46,608 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doSelectOne의 수행시간: 6(ms)초
2021-04-07 11:08:46,608 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:09:42,934 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:09:42,942 DEBUG [main] ehr.JTestUserService (JTestUserService.java:159)     - context: org.springframework.context.support.GenericApplicationContext@2e222612, started on Wed Apr 07 11:09:42 KST 2021
2021-04-07 11:09:42,944 DEBUG [main] ehr.JTestUserService (JTestUserService.java:160)     - userService: com.sist.ehr.member.service.UserServiceImpl@790132f7
2021-04-07 11:09:42,944 DEBUG [main] ehr.JTestUserService (JTestUserService.java:161)     - userDao: com.sist.ehr.UserDaoImpl@2228db21
2021-04-07 11:09:42,945 DEBUG [main] ehr.JTestUserService (JTestUserService.java:162)     - dataSource: org.apache.commons.dbcp.BasicDataSource@48b0e701
2021-04-07 11:09:42,945 DEBUG [main] ehr.JTestUserService (JTestUserService.java:163)     - transactionManagerorg.springframework.jdbc.datasource.DataSourceTransactionManager@241a0c3a
2021-04-07 11:09:42,948 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 11:09:42,950 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 11:09:42,953 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:09:42,954 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:09:42,954 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:09:42,954 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:42,954 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:09:43,414 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 460(ms)초
2021-04-07 11:09:43,414 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:09:43,414 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:09:43,415 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:09:43,415 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,416 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:09:43,419 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 11:09:43,419 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:09:43,419 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:09:43,419 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:09:43,420 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,420 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:09:43,424 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 4(ms)초
2021-04-07 11:09:43,424 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:09:43,424 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:09:43,424 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:09:43,424 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,425 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:09:43,430 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 6(ms)초
2021-04-07 11:09:43,430 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 11:09:43,430 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 11:09:43,430 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 11:09:43,430 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,431 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 11:09:43,433 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 11:09:43,434 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:09:43,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:09:43,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:09:43,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:09:43,439 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 5(ms)초
2021-04-07 11:09:43,439 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:09:43,439 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:09:43,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:09:43,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:09:43,444 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 11:09:43,444 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:09:43,444 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:09:43,444 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:09:43,445 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,445 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:09:43,451 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 6(ms)초
2021-04-07 11:09:43,451 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:09:43,451 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:09:43,451 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:09:43,452 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,452 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:09:43,455 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:09:43,455 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 11:09:43,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 11:09:43,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 11:09:43,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 11:09:43,459 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 11:09:43,463 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 11:09:43,463 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 11:09:43,464 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,464 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 11:09:43,522 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:09:43,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 11:09:43,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 11:09:43,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 3
2021-04-07 11:09:43,523 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 4
2021-04-07 11:09:43,524 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=2021/04/07 110943, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,524 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110943, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,524 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=2021/04/07 110943, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,524 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=2021/04/07 110943, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,524 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=2021/04/07 110943, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,524 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 11:09:43,525 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 11:09:43,525 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@37d871c2
2021-04-07 11:09:43,527 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 2(ms)초
2021-04-07 11:09:43,528 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 11:09:43,528 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 11:09:43,528 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 11:09:43,528 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 11:09:43,530 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 11:09:43,531 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 11:09:43,531 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@285f38f6
2021-04-07 11:09:43,533 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 2(ms)초
2021-04-07 11:09:43,533 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 11:09:43,534 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 11:09:43,534 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 11:09:43,534 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 11:09:43,537 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doSelectOne
2021-04-07 11:09:43,537 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:221)     - ==================================
2021-04-07 11:09:43,538 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:222)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM                  
     hr_member         
 WHERE u_id = ?        

2021-04-07 11:09:43,538 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:223)     - ==================================
2021-04-07 11:09:43,538 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:226)     - =args=[Ljava.lang.Object;@36fc05ff
2021-04-07 11:09:43,541 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 11:09:43,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:230)     - ==================================
2021-04-07 11:09:43,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:231)     - =outVO=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=SILVER, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 110943, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 11:09:43,543 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:232)     - ==================================
2021-04-07 11:09:43,543 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doSelectOne의 수행시간: 5(ms)초
2021-04-07 11:09:43,543 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 14:33:55,870 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 14:33:55,882 DEBUG [main] ehr.JTestUserService (JTestUserService.java:159)     - context: org.springframework.context.support.GenericApplicationContext@2e222612, started on Wed Apr 07 14:33:55 KST 2021
2021-04-07 14:33:55,884 DEBUG [main] ehr.JTestUserService (JTestUserService.java:160)     - userService: com.sist.ehr.member.service.UserServiceImpl@790132f7
2021-04-07 14:33:55,885 DEBUG [main] ehr.JTestUserService (JTestUserService.java:161)     - userDao: com.sist.ehr.UserDaoImpl@2228db21
2021-04-07 14:33:55,885 DEBUG [main] ehr.JTestUserService (JTestUserService.java:162)     - dataSource: org.apache.commons.dbcp.BasicDataSource@48b0e701
2021-04-07 14:33:55,885 DEBUG [main] ehr.JTestUserService (JTestUserService.java:163)     - transactionManagerorg.springframework.jdbc.datasource.DataSourceTransactionManager@241a0c3a
2021-04-07 14:33:55,890 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
2021-04-07 14:33:55,892 DEBUG [main] ehr.JTestUserService (JTestUserService.java:66)     - setUp()
2021-04-07 14:33:55,895 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 14:33:55,896 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 14:33:55,896 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 14:33:55,896 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:55,896 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 14:33:56,433 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 537(ms)초
2021-04-07 14:33:56,433 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 14:33:56,433 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 14:33:56,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 14:33:56,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,434 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 14:33:56,437 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 14:33:56,437 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 14:33:56,437 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 14:33:56,437 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 14:33:56,437 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,437 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 14:33:56,440 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 14:33:56,440 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 14:33:56,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 14:33:56,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 14:33:56,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,440 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 14:33:56,443 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 2(ms)초
2021-04-07 14:33:56,443 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doDelete
2021-04-07 14:33:56,443 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:129)     - =sql=
 DELETE FROM hr_member   
 WHERE u_id = ?          

2021-04-07 14:33:56,443 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:132)     - ==================================
2021-04-07 14:33:56,443 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:133)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,444 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:134)     - ==================================
2021-04-07 14:33:56,447 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doDelete의 수행시간: 3(ms)초
2021-04-07 14:33:56,447 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 14:33:56,448 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 14:33:56,448 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 14:33:56,448 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,448 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 14:33:56,454 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 6(ms)초
2021-04-07 14:33:56,454 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 14:33:56,454 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 14:33:56,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 14:33:56,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,455 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 14:33:56,459 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 14:33:56,459 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 14:33:56,459 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 14:33:56,459 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 14:33:56,459 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,459 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 14:33:56,462 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 2(ms)초
2021-04-07 14:33:56,462 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 14:33:56,462 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 14:33:56,462 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 14:33:56,463 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,463 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 14:33:56,467 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 4(ms)초
2021-04-07 14:33:56,467 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doInsert
2021-04-07 14:33:56,467 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:176)     - =sql=
 INSERT INTO hr_member (   
     u_id,                 
     name,                 
     passwd,               
     u_level,              
     login,                
     recommend,            
     email,                
     reg_dt                 
 ) VALUES (                
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     ?,                    
     SYSDATE               
 )                         

2021-04-07 14:33:56,467 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:187)     - ==================================
2021-04-07 14:33:56,467 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:188)     - =user=User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,467 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:189)     - ==================================
2021-04-07 14:33:56,471 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doInsert의 수행시간: 3(ms)초
2021-04-07 14:33:56,477 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:77)     - ==================================
2021-04-07 14:33:56,477 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:78)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM hr_member               
 WHERE u_id LIKE  ? || '%'    
 ORDER BY u_id                

2021-04-07 14:33:56,477 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:79)     - =param=User [uId=H_126, name=null, passwd=null, level=null, login=0, recommend=0, email=null, regDt=null, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,477 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:80)     - ==================================
2021-04-07 14:33:56,541 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 14:33:56,541 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 1
2021-04-07 14:33:56,541 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 2
2021-04-07 14:33:56,541 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 3
2021-04-07 14:33:56,541 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 4
2021-04-07 14:33:56,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_01, name=김재욱_01, passwd=1234, level=BASIC, login=49, recommend=0, email=plagis@daum.net, regDt=2021/04/07 143357, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_02, name=김재욱_02, passwd=1234, level=BASIC, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 143357, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_03, name=김재욱_03, passwd=1234, level=SILVER, login=51, recommend=29, email=plagis@daum.net, regDt=2021/04/07 143357, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_04, name=김재욱_04, passwd=1234, level=SILVER, login=51, recommend=30, email=plagis@daum.net, regDt=2021/04/07 143357, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,542 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:85)     - User [uId=H_126_05, name=김재욱_05, passwd=1234, level=GOLD, login=99, recommend=31, email=plagis@daum.net, regDt=2021/04/07 143357, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,543 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 14:33:56,543 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 14:33:56,543 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@2d9f64c9
2021-04-07 14:33:56,546 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 3(ms)초
2021-04-07 14:33:56,547 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 14:33:56,547 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 14:33:56,547 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 14:33:56,547 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 14:33:56,547 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doUpdate
2021-04-07 14:33:56,547 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:265)     - =sql=
 UPDATE hr_member     
 SET                  
 	name      = ?,   
 	passwd    = ?,   
 	u_level   = ?,   
 	login     = ?,   
 	recommend = ?,   
 	email     = ?,   
 	reg_dt    = SYSDATE    
 WHERE u_id    = ?    

2021-04-07 14:33:56,548 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:277)     - =args=
[Ljava.lang.Object;@52d6cd34
2021-04-07 14:33:56,550 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doUpdate의 수행시간: 2(ms)초
2021-04-07 14:33:56,551 DEBUG [main] service.DummyMailSender (DummyMailSender.java:13)     - ***********************
2021-04-07 14:33:56,551 DEBUG [main] service.DummyMailSender (DummyMailSender.java:14)     - 개발용 email 입니다.
2021-04-07 14:33:56,551 DEBUG [main] service.DummyMailSender (DummyMailSender.java:15)     - mail은 전송되지 않습니다.
2021-04-07 14:33:56,551 DEBUG [main] service.DummyMailSender (DummyMailSender.java:16)     - ***********************
2021-04-07 14:33:56,555 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:15)     - signature.getName(): doSelectOne
2021-04-07 14:33:56,555 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:221)     - ==================================
2021-04-07 14:33:56,555 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:222)     - =sql=
 SELECT                
     u_id,             
     name,             
     passwd,           
     u_level,          
     login,            
     recommend,        
     email,            
     TO_CHAR(reg_dt,'YYYY/MM/DD HH24MISS') reg_dt         
 FROM                  
     hr_member         
 WHERE u_id = ?        

2021-04-07 14:33:56,555 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:223)     - ==================================
2021-04-07 14:33:56,555 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:226)     - =args=[Ljava.lang.Object;@c2e3264
2021-04-07 14:33:56,559 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:41)     - rowNum: 0
2021-04-07 14:33:56,561 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:230)     - ==================================
2021-04-07 14:33:56,561 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:231)     - =outVO=User [uId=H_126_02, name=김재욱_02, passwd=1234, level=SILVER, login=50, recommend=10, email=plagis@daum.net, regDt=2021/04/07 143357, toString()=DTO [uId=null, name=null, passwd=null]]
2021-04-07 14:33:56,561 DEBUG [main] ehr.UserDaoImpl   (UserDaoImpl.java:232)     - ==================================
2021-04-07 14:33:56,561 DEBUG [main] performance.PerformanceAdvice (PerformanceAdvice.java:26)     - doSelectOne의 수행시간: 5(ms)초
2021-04-07 14:33:56,561 DEBUG [main] ehr.JTestUserService (JTestUserService.java:154)     - tearDown()
